{"version":3,"file":"index.esm.js","sources":["../../src/lib/options/options.actions.ts","../../src/lib/dates.ts","../../src/lib/options/options.reducer.ts","../../src/lib/store/reducer.ts","../../src/lib/store/store.ts","../../src/lib/store/actions.ts","index.ts"],"sourcesContent":["import { Options, OptionsAction } from './options.models';\n\nexport const actionTypes = {\n  optionsLoaded: 'options/loaded',\n  changeOptions: 'options/change',\n  optionsChanged: 'options/changed',\n};\n\nexport const optionsLoaded = (options: Options): OptionsAction => ({\n  type: actionTypes.optionsLoaded,\n  payload: options,\n});\n\nexport const changeOptions = (options: Options): OptionsAction => ({\n  type: actionTypes.changeOptions,\n  payload: options,\n});\n\nexport const optionsChanged = (options: Options): OptionsAction => ({\n  type: actionTypes.optionsChanged,\n  payload: options,\n});\n","import { Data } from './models';\n// import { zeroPad } from './utils';\n\nexport function zeroPad(n: string, w: number) {\n  while (n.toString().length < w) {\n    n = '0' + n;\n  }\n  return n;\n}\n\nexport function getDates(data: Data[]) {\n  const uniqueDates = new Set<string>();\n  data.forEach((d) => {\n    uniqueDates.add(d.date);\n  });\n  return Array.from(uniqueDates).sort();\n}\n\nexport function filterDates(data: Data[], startDate: string, endDate: string) {\n  return data\n    .filter((d) => (startDate ? d.date >= startDate : true))\n    .filter((d) => (endDate ? d.date <= endDate : true));\n}\n\nexport function getDateString(inputDate: string | Date) {\n  const date = new Date(inputDate);\n  if (isNaN(+date)) {\n    throw new Error(`\"${inputDate}\" is not a valid date`);\n  }\n\n  const year = date.getFullYear();\n\n  let month = (1 + date.getMonth()).toString();\n  month = zeroPad(month, 2);\n\n  let day = date.getDate().toString();\n  day = zeroPad(day, 2);\n\n  return `${year}${month}${day}`;\n}\n\nexport function formatDate(dateStr: string, format: string) {\n  const year = dateStr.slice(0, 4);\n  const month = dateStr.slice(4, 6);\n  const day = dateStr.slice(6, 8);\n  const date = new Date(`${year}-${month}-${day}`);\n  const weekDayIndex = String(date.getDay());\n  const monthNames: { [key: string]: string } = {\n    '01': 'Jan',\n    '02': 'Feb',\n    '03': 'Mar',\n    '04': 'Apr',\n    '05': 'May',\n    '06': 'Jun',\n    '07': 'Jul',\n    '08': 'Aug',\n    '09': 'Sep',\n    '10': 'Oct',\n    '11': 'Nov',\n    '12': 'Dec',\n  };\n\n  const weekDays: { [key: string]: string } = {\n    '0': 'Sun',\n    '1': 'Mon',\n    '2': 'Tue',\n    '3': 'Wed',\n    '4': 'Thu',\n    '5': 'Fri',\n    '6': 'Sat',\n  };\n\n  return format\n    .replace('MMM', monthNames[month])\n    .replace('DDD', weekDays[weekDayIndex])\n    .replace('YYYY', year)\n    .replace('MM', month)\n    .replace('DD', day);\n}\n","import { getDateString } from '..';\nimport { Options, OptionsAction } from './options.models';\nimport { actionTypes } from './options.actions';\n\nconst initialState: Options = {\n  selector: '#race',\n  dataShape: 'long',\n  fillDateGaps: false,\n  fillDateGapsValue: 'last',\n  startDate: '',\n  endDate: '',\n  colorSeed: '',\n  disableGroupColors: false,\n  tickDuration: 500,\n  topN: 10,\n  disableClickEvents: true,\n  disableKeyboardEvents: false,\n  autorun: true,\n  loop: false,\n  injectStyles: true,\n  title: '18 years of Top Global Brands',\n  subTitle: 'Brand value, $m',\n  caption: 'Source: Interbrand',\n  dateCounterFormat: 'YYYY',\n  labelsOnBars: true,\n  labelsWidth: 100,\n  showControls: 'all',\n  showOverlays: 'all',\n  inputHeight: '',\n  inputWidth: '',\n  minHeight: 300,\n  minWidth: 500,\n};\n\nexport function optionsReducer(state = initialState, action: OptionsAction): Options {\n  switch (action.type) {\n    // initial processing of input options\n    case actionTypes.optionsLoaded:\n      const startDate = action.payload.startDate ? getDateString(action.payload.startDate) : '';\n      const endDate = action.payload.endDate ? getDateString(action.payload.endDate) : '';\n      const inputHeight = action.payload.height;\n      const inputWidth = action.payload.width;\n      return {\n        ...state,\n        ...action.payload,\n        startDate,\n        endDate,\n        inputHeight,\n        inputWidth,\n      };\n\n    // change options from code e.g. change height and width on resize\n    case actionTypes.changeOptions:\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { Action } from '../models';\n\nimport { optionsReducer, OptionsAction } from '../options';\nimport { State } from './state';\n\nexport function rootReducer(state: State, action: Action): State {\n  return {\n    ticker: {},\n    dates: {},\n    controls: {},\n    data: {},\n    options: optionsReducer(state.options, action as OptionsAction),\n  };\n}\n","import { Action, Reducer } from '../models';\nimport { rootReducer } from './reducer';\nimport { State } from './state';\n\nexport function createStore(reducer: Reducer = rootReducer, initialState?: State) {\n  let state: State;\n\n  if (initialState) {\n    state = initialState;\n  }\n\n  function dispatch(action: Action) {\n    state = reducer(state, action);\n    notifySubscribers();\n  }\n\n  function getState() {\n    return state;\n  }\n\n  type Subscriber = () => void;\n  const subscribers: Subscriber[] = [];\n\n  function subscribe(fn: Subscriber) {\n    subscribers.push(fn);\n    const index = subscribers.length - 1;\n\n    return {\n      unsubscribe: () => {\n        subscribers.splice(index, 1);\n      },\n    };\n  }\n\n  function notifySubscribers() {\n    subscribers.forEach((fn: Subscriber) => {\n      fn();\n    });\n  }\n\n  return {\n    getState,\n    dispatch,\n    subscribe,\n  };\n}\n","import { actions as options } from '../options';\n\nexport const actions = {\n  options,\n};\n","import { createStore, actions } from '../../src/lib/store';\nimport { rootReducer } from '../../src/lib/store/reducer';\n\nconst store = createStore(rootReducer);\nstore.dispatch(actions.options.optionsLoaded({ startDate: '1980-07-01', endDate: '2010-12-31' }));\n\nconsole.log(store.getState());\n"],"names":["actionTypes","optionsLoaded","changeOptions","optionsChanged","options","type","payload","zeroPad","n","w","toString","length","getDateString","inputDate","date","Date","isNaN","Error","year","getFullYear","month","getMonth","day","getDate","initialState","selector","dataShape","fillDateGaps","fillDateGapsValue","startDate","endDate","colorSeed","disableGroupColors","tickDuration","topN","disableClickEvents","disableKeyboardEvents","autorun","loop","injectStyles","title","subTitle","caption","dateCounterFormat","labelsOnBars","labelsWidth","showControls","showOverlays","inputHeight","inputWidth","minHeight","minWidth","optionsReducer","state","action","height","width","rootReducer","ticker","dates","controls","data","createStore","reducer","dispatch","notifySubscribers","getState","subscribers","subscribe","fn","push","index","unsubscribe","splice","forEach","actions","store","console","log"],"mappings":"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"}