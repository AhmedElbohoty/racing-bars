{
  "name": "racing-bars",
  "version": "0.0.1",
  "description": "Bar Chart Race",
  "repository": "https://github.com/hatemhosny/racing-bars",
  "license": "MIT",
  "keywords": [],
  "main": "dist/index.js",
  "umd:main": "dist/racing-bars.umd.js",
  "module": "dist/index.js",
  "types": "dist/index.d.ts",
  "source": "src/index.js",
  "unpkg": "dist/racing-bars.umd.js",
  "scripts": {
    "describe": "npm-scripts-info",
    "start": "run-p dev serve",
    "serve": "servor demo index.html --reload",
    "serve:website": "cd website && docusaurus start",
    "serve:build": "servor build index.html",
    "serve:angular": "cd src/angular && ng serve consumer",
    "dev": "run-p src:watch styles:watch",
    "src:watch": "microbundle watch src/index.ts -o demo/scripts -f umd --compress false --tsconfig tsconfig.dev.json",
    "build": "run-s clean styles build:*",
    "build:lib": "microbundle build src/index.ts --external none -f es,umd --sourcemap false",
    "build:lite": "microbundle build src/index.ts -o dist/lite/index.js -f es,umd --sourcemap false",
    "build:react": "microbundle build src/react/index.ts -o dist/react/index.js --external react -f es,umd --sourcemap false",
    "build:vue": "microbundle build src/vue/index.ts -o dist/vue/index.js --external none -f es,umd --sourcemap false",
    "build:angular": "cd src/angular && ng build --prod racing-bars && mkdirp ../../dist && recursive-copy dist/racing-bars ../../dist/angular",
    "build:api-docs": "typedoc --inputFiles src/index.ts --inputFiles src/react/index.ts --inputFiles src/vue/index.ts --inputFiles src/angular/index.ts --out website/static/api --exclude **/*.spec.ts --mode library  --plugin none --tsconfig tsconfig.typedoc.json",
    "build:website": "cd website && docusaurus build --out-dir ../build",
    "website:publish": "gh-pages -m \"[ci skip] Updates\" -d build",
    "styles": "node src/css2ts.js",
    "styles:watch": "node src/css2ts.js --watch",
    "fix": "run-s fix:*",
    "fix:prettier": "prettier \"src/**/*.ts\" --write",
    "fix:lint": "eslint -c .eslintrc.js --ext .ts .",
    "test": "run-s test:*",
    "test:lint": "eslint -c .eslintrc.js --ext .ts . && prettier \"src/**/*.ts\" --list-different",
    "test:unit": "jest",
    "watch": "run-s clean build:lib && run-p \"build:lib -- -w\" \"test:unit -- --watch\"",
    "cov": "run-s \"test:unit -- --coverage\"",
    "cov:send": "run-s cov && codecov",
    "symlink:website-data": "symlink-dir data website/static/data",
    "symlink:python-data": "symlink-dir data src/python/src/racingbars/data",
    "symlink:ng-data": "symlink-dir data src/angular/projects/consumer/src/assets/data",
    "symlink:demo-data": "symlink-dir data demo/data",
    "symlink:ng-lib": "symlink-dir src/lib src/angular/projects/racing-bars/src/srclib",
    "symlink:ng-shared": "symlink-dir src/shared src/angular/projects/racing-bars/src/lib/shared",
    "install:angular": "cd src/angular && npm i",
    "symlinks": "run-s symlink:*",
    "reset": "git clean -dfx && git reset --hard && npm i",
    "postinstall": "run-s install:angular symlinks",
    "clean": "recursive-delete dist",
    "release": "standard-version",
    "prepare-release": "run-s reset build test cov release doc:publish"
  },
  "scripts-info": {
    "info": "Display information about the package scripts",
    "build": "Clean and rebuild the project",
    "fix": "Try to automatically fix any linting problems",
    "test": "Lint and unit test the project",
    "watch": "Watch and rebuild the project on save, then rerun relevant tests",
    "cov": "Rebuild, run tests, then create and open the coverage report",
    "doc": "Generate HTML API documentation and open it in a browser",
    "doc:json": "Generate API documentation in typedoc JSON format",
    "version": "Bump package.json version, update CHANGELOG.md, tag release",
    "reset": "Delete all untracked files and reset the repo to the last commit",
    "prepare-release": "One-step: clean, build, test, publish docs, and prep a release"
  },
  "engines": {
    "node": ">=8.9"
  },
  "dependencies": {
    "d3": "5.16.0"
  },
  "devDependencies": {
    "@bitjson/npm-scripts-info": "1.0.0",
    "@bitjson/typedoc": "0.15.0-0",
    "@docusaurus/core": "^2.0.0-alpha.56",
    "@docusaurus/preset-classic": "^2.0.0-alpha.56",
    "@hatemhosny/docusaurus-plugin-gallery": "2.0.0-alpha.56",
    "@istanbuljs/nyc-config-typescript": "1.0.1",
    "@types/d3": "5.7.2",
    "@types/jest": "25.2.3",
    "@types/node": "14.0.4",
    "@types/react": "16.9.35",
    "@typescript-eslint/eslint-plugin": "2.34.0",
    "@typescript-eslint/parser": "2.34.0",
    "classnames": "2.2.6",
    "codecov": "3.7.0",
    "cz-conventional-changelog": "3.2.0",
    "docusaurus-lunr-search": "^2.0.1",
    "eslint": "7.0.0",
    "eslint-config-prettier": "6.11.0",
    "eslint-plugin-import": "2.20.2",
    "eslint-plugin-jest": "23.13.1",
    "eslint-plugin-jsdoc": "25.4.2",
    "eslint-plugin-prefer-arrow": "1.2.1",
    "gh-pages": "2.2.0",
    "jest": "26.0.1",
    "microbundle": "0.12.0",
    "mkdirp": "1.0.4",
    "npm-run-all": "4.1.5",
    "open-cli": "6.0.1",
    "prettier": "2.0.5",
    "react": "16.8.4",
    "react-dom": "16.8.4",
    "recursive-fs": "2.1.0",
    "servor": "4.0.2",
    "standard-version": "8.0.0",
    "symlink-dir": "4.1.0",
    "ts-jest": "26.0.0",
    "typedoc": "0.17.0-3",
    "typescript": "3.9.3"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "prettier": {
    "semi": true,
    "singleQuote": true,
    "trailingComma": "all",
    "printWidth": 100
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "jsdom",
    "coverageReporters": [
      "json",
      "html",
      "lcov"
    ]
  }
}
